#!/bin/bash

# Generated by POWSCRIPT (https://github.com/coderofsalvation/powscript)
#
# Unless you like pain: edit the .pow sourcefiles instead of this file

# powscript general settings
set -e                         # halt on error
set +m                         #
SHELL="$(echo $0)"             # shellname
SHELLNAME="$(basename $SHELL)" # shellname without path
shopt -s lastpipe              # flexible while loops (maintain scope)
shopt -s extglob               # regular expressions
path="$(pwd)"
selfpath="$( dirname "$(readlink -f "$0")" )"
tmpfile="/tmp/$(basename $0).tmp.$(whoami)"
#
# generated by powscript (https://github.com/coderofsalvation/powscript)
#

mappipe () 
{ 
    func="$1";
    shift;
    ( while read -r line; do
        $func "$@" "$line";
    done )
}



chown nodejs:nodejs -R /srv
ln -s /opt/pm /usr/bin/pm

for mod in $NPM_MODULES; do
  su -c "npm install $mod -g" nodejs
done

su -c 'pm init' nodejs
su -c 'pm config pmserver 8081' nodejs

add_app(){
  local app="${1}"
  if [[ $app =~ "proxy" || $app =~ "pmserver" ]]; then
    return 0
  fi
  su -c "pm add $app" nodejs
}

if [[ -n $PROXY_PORT ]]; then
  if [[ ! -d /srv/apps/proxy ]]; then
    echo installing proxy
    set -x
    cd /srv/apps
    git clone https://github.com/donasaur/http-proxy-rules proxy
    cd proxy
    npm install
    mv index.js proxy.js
    ln -s ../proxytable.js index.js
    echo -e "export PORT=8080" > env.sh
    echo -e "export NODE_PATH=.:node_modules" >> env.sh
  fi
fi

find /srv/apps -type d -mindepth 1 -maxdepth 1 2>/dev/null | mappipe add_app
su -c 'pm add /srv/apps/proxy proxy "node index.js"' nodejs

# wait for all async child processes (because "await ... then" is used in powscript)
[[ $ASYNC == 1 ]] && wait


# cleanup tmp files
if ls /tmp/$(basename $0).tmp.sqz* &>/dev/null; then
  for f in /tmp/$(basename $0).tmp.sqz*; do rm $f; done
fi

exit 0

